{"version":3,"file":"index.es.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/constants/verify.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\nexport const WALLETCONNECT_DEEPLINK_CHOICE = \"WALLETCONNECT_DEEPLINK_CHOICE\";\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n\nexport const PROPOSAL_EXPIRY_MESSAGE = \"Proposal expired\";\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n","export const REQUEST_CONTEXT = \"request\";\n","export const METHODS_TO_VERIFY = [\"wc_sessionPropose\", \"wc_sessionRequest\", \"wc_authRequest\"];\n","/* eslint-disable no-console */\nimport { EXPIRER_EVENTS, RELAYER_DEFAULT_PROTOCOL, RELAYER_EVENTS } from \"@walletconnect/core\";\n\nimport {\n  JsonRpcPayload,\n  formatJsonRpcError,\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  getBigIntRpcId,\n  isJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  EnginePrivate,\n  EngineTypes,\n  ExpirerTypes,\n  IEngine,\n  IEngineEvents,\n  JsonRpcTypes,\n  PendingRequestTypes,\n  Verify,\n  CoreTypes,\n  ProposalTypes,\n  RelayerTypes,\n  SessionTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  createDelayedPromise,\n  engineEvent,\n  getInternalError,\n  getRequiredNamespacesFromNamespaces,\n  getSdkError,\n  isConformingNamespaces,\n  isExpired,\n  isSessionCompatible,\n  isUndefined,\n  isValidController,\n  isValidErrorReason,\n  isValidEvent,\n  isValidId,\n  isValidNamespaces,\n  isValidNamespacesChainId,\n  isValidNamespacesEvent,\n  isValidNamespacesRequest,\n  isValidObject,\n  isValidParams,\n  isValidRelay,\n  isValidRelays,\n  isValidRequest,\n  isValidRequestExpiry,\n  hashMessage,\n  isBrowser,\n  isValidRequiredNamespaces,\n  isValidResponse,\n  isValidString,\n  parseExpirerTarget,\n  TYPE_1,\n  handleDeeplinkRedirect,\n} from \"@walletconnect/utils\";\nimport EventEmmiter from \"events\";\nimport {\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  PROPOSAL_EXPIRY_MESSAGE,\n  SESSION_EXPIRY,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n  METHODS_TO_VERIFY,\n  WALLETCONNECT_DEEPLINK_CHOICE,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    const connectParams = {\n      ...params,\n      requiredNamespaces: params.requiredNamespaces || {},\n      optionalNamespaces: params.optionalNamespaces || {},\n    };\n    await this.isValidConnect(connectParams);\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      connectParams;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const proposal = {\n      requiredNamespaces,\n      optionalNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n      ...(sessionProperties && { sessionProperties }),\n    };\n    const {\n      reject,\n      resolve,\n      done: approval,\n    } = createDelayedPromise<SessionTypes.Struct>(FIVE_MINUTES, PROPOSAL_EXPIRY_MESSAGE);\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = {\n            ...session,\n            requiredNamespaces: session.requiredNamespaces,\n            optionalNamespaces: session.optionalNamespaces,\n          };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces, sessionProperties } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces, optionalNamespaces } = proposal;\n    pairingTopic = pairingTopic || \"\";\n    if (!isValidObject(requiredNamespaces)) {\n      requiredNamespaces = getRequiredNamespacesFromNamespaces(namespaces, \"approve()\");\n    }\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n\n    if (pairingTopic && id) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: proposer.metadata,\n      });\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"irn\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      optionalNamespaces,\n      pairingTopic,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n      ...(sessionProperties && { sessionProperties }),\n    };\n    await this.client.core.relayer.subscribe(sessionTopic);\n    await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      pairingTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    return {\n      topic: sessionTopic,\n      acknowledged: () =>\n        new Promise((resolve) =>\n          setTimeout(() => resolve(this.client.session.get(sessionTopic)), 5_00),\n        ), // artificial delay to allow for the session to be processed by the peer\n    };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId }, expiry);\n    const { done, resolve, reject } = createDelayedPromise<T>(expiry);\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    this.client.events.emit(\"session_request_sent\", { topic, request, chainId, id });\n    const wcDeepLink = await this.client.core.storage.getItem(WALLETCONNECT_DEEPLINK_CHOICE);\n    handleDeeplinkRedirect({ id, topic, wcDeepLink });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = getBigIntRpcId().toString() as any;\n      let resolvePromise: () => void;\n      const onDisconnectAck = (ack: JsonRpcPayload) => {\n        if (ack?.id.toString() === id) {\n          this.client.core.relayer.events.removeListener(\n            RELAYER_EVENTS.message_ack,\n            onDisconnectAck,\n          );\n          resolvePromise();\n        }\n      };\n      // await a relay ACK on the disconnect req before deleting the session, keychain etc.\n      await Promise.all([\n        new Promise<void>((resolve) => {\n          resolvePromise = resolve;\n          this.client.core.relayer.on(RELAYER_EVENTS.message_ack, onDisconnectAck);\n        }),\n        this.sendRequest(\n          topic,\n          \"wc_sessionDelete\",\n          getSdkError(\"USER_DISCONNECTED\"),\n          undefined,\n          id,\n        ),\n      ]);\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    this.isInitialized();\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private cleanupDuplicatePairings: EnginePrivate[\"cleanupDuplicatePairings\"] = async (\n    session: SessionTypes.Struct,\n  ) => {\n    // older SDK versions are missing the `pairingTopic` prop thus we need to check for it\n    if (!session.pairingTopic) return;\n\n    try {\n      const pairing = this.client.core.pairing.pairings.get(session.pairingTopic);\n      const allPairings = this.client.core.pairing.pairings.getAll();\n      const duplicates = allPairings.filter(\n        (p) =>\n          p.peerMetadata?.url &&\n          p.peerMetadata?.url === session.peer.metadata.url &&\n          p.topic &&\n          p.topic !== pairing.topic,\n      );\n      if (duplicates.length === 0) return;\n      this.client.logger.info(`Cleaning up ${duplicates.length} duplicate pairing(s)`);\n      await Promise.all(\n        duplicates.map((p) => this.client.core.pairing.disconnect({ topic: p.topic })),\n      );\n      this.client.logger.info(`Duplicate pairings clean up finished`);\n    } catch (error) {\n      this.client.logger.error(error);\n    }\n  };\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n    if (this.client.core.crypto.keychain.has(self.publicKey)) {\n      await this.client.core.crypto.deleteKeyPair(self.publicKey);\n    }\n    if (this.client.core.crypto.keychain.has(topic)) {\n      await this.client.core.crypto.deleteSymKey(topic);\n    }\n    if (!expirerHasDeleted) this.client.core.expirer.del(topic);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl;\n    const { id, topic, params } = pendingRequest;\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n    });\n    if (expiry) this.client.core.expirer.set(id, calcExpiry(expiry));\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params, expiry, id) => {\n    const payload = formatJsonRpcRequest(method, params);\n    if (isBrowser() && METHODS_TO_VERIFY.includes(method)) {\n      const hash = hashMessage(JSON.stringify(payload));\n      await this.client.core.verify.register({ attestationId: hash });\n    }\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    if (id) opts.id = id; // set rpc_id for client -> relay req\n    this.client.core.history.set(topic, payload);\n    this.client.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n\n        if (isJsonRpcRequest(payload)) {\n          this.client.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.core.history.resolve(payload);\n          await this.onRelayEventResponse({ topic, payload });\n          this.client.core.history.delete(topic, payload.id);\n        } else {\n          this.onRelayEventUnknownPayload({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  private onRelayEventUnknownPayload: EnginePrivate[\"onRelayEventUnknownPayload\"] = (event) => {\n    const { topic } = event;\n    const { message } = getInternalError(\n      \"MISSING_OR_INVALID\",\n      `Decoded payload on topic ${topic} is not identifiable as a JSON-RPC request or a response.`,\n    );\n    throw new Error(message);\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      const hash = hashMessage(JSON.stringify(payload));\n      const verifyContext = await this.getVerifyContext(hash, proposal.proposer.metadata);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal, verifyContext });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const {\n        relay,\n        controller,\n        expiry,\n        namespaces,\n        requiredNamespaces,\n        optionalNamespaces,\n        sessionProperties,\n        pairingTopic,\n      } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        pairingTopic,\n        requiredNamespaces,\n        optionalNamespaces,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n        ...(sessionProperties && { sessionProperties }),\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n      this.cleanupDuplicatePairings(session);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      await Promise.all([\n        new Promise((resolve) => {\n          // RPC request needs to happen before deletion as it utalises session encryption\n          this.client.core.relayer.once(RELAYER_EVENTS.publish, async () => {\n            resolve(await this.deleteSession(topic));\n          });\n        }),\n        this.sendResult<\"wc_sessionDelete\">(id, topic, true),\n      ]);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      await this.setPendingSessionRequest({ id, topic, params });\n      const hash = hashMessage(JSON.stringify(payload));\n      const session = this.client.session.get(topic);\n      const verifyContext = await this.getVerifyContext(hash, session.peer.metadata);\n      this.client.events.emit(\"session_request\", { id, topic, params, verifyContext });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n        this.client.events.emit(\"proposal_expire\", { id });\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) !== 0) {\n      this.validateNamespaces(requiredNamespaces, \"requiredNamespaces\");\n    }\n\n    // validate optional namespaces only if they are defined\n    if (!isUndefined(optionalNamespaces) && isValidObject(optionalNamespaces) !== 0) {\n      this.validateNamespaces(optionalNamespaces, \"optionalNamespaces\");\n    }\n\n    // validate session properties only if they are defined\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private validateNamespaces = (\n    namespaces: ProposalTypes.RequiredNamespaces | ProposalTypes.OptionalNamespaces,\n    type: string,\n  ) => {\n    const validRequiredNamespacesError = isValidRequiredNamespaces(namespaces, \"connect()\", type);\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol, sessionProperties } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"approve()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private getVerifyContext = async (hash: string, metadata: CoreTypes.Metadata) => {\n    const context: Verify.Context = {\n      verified: {\n        verifyUrl: metadata.verifyUrl || \"\",\n        validation: \"UNKNOWN\",\n        origin: metadata.url || \"\",\n      },\n    };\n\n    try {\n      const origin = await this.client.core.verify.resolve({\n        attestationId: hash,\n        verifyUrl: metadata.verifyUrl,\n      });\n      if (origin) {\n        context.verified.origin = origin;\n        context.verified.validation = origin === metadata.url ? \"VALID\" : \"INVALID\";\n      }\n    } catch (e) {\n      this.client.logger.error(e);\n    }\n\n    this.client.logger.info(`Verify context: ${JSON.stringify(context)}`);\n    return context;\n  };\n\n  private validateSessionProps = (properties: ProposalTypes.SessionProperties, type: string) => {\n    Object.values(properties).forEach((property) => {\n      if (!isValidString(property, false)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `${type} must be in Record<string, string> format. Received: ${JSON.stringify(property)}`,\n        );\n        throw new Error(message);\n      }\n    });\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(\n      core,\n      logger,\n      REQUEST_CONTEXT,\n      SIGN_CLIENT_STORAGE_PREFIX,\n      (val: PendingRequestTypes.Struct) => val.id,\n    );\n  }\n}\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.core.verify.init({ verifyUrl: this.metadata.verifyUrl });\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_RPC_OPTS","params","connectParams","__spreadProps","__spreadValues","pairingTopic","requiredNamespaces","optionalNamespaces","sessionProperties","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","PROPOSAL_EXPIRY_MESSAGE","engineEvent","error","session","completeSession","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","isValidObject","getRequiredNamespacesFromNamespaces","selfPublicKey","peerPublicKey","sessionTopic","getSdkError","sessionSettle","SESSION_EXPIRY","reason","acknowledged","chainId","request","done","result","wcDeepLink","WALLETCONNECT_DEEPLINK_CHOICE","handleDeeplinkRedirect","response","isJsonRpcResult","isJsonRpcError","event","getBigIntRpcId","resolvePromise","onDisconnectAck","ack","RELAYER_EVENTS","isSessionCompatible","pairing","duplicates","p","_a","_b","expirerHasDeleted","self","pendingRequest","method","payload","formatJsonRpcRequest","isBrowser","METHODS_TO_VERIFY","hash","hashMessage","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","verifyContext","err","subscriptionId","relay","controller","_topic","isValidParams","isUndefined","isValidRelays","type","validRequiredNamespacesError","isValidRequiredNamespaces","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","metadata","context","origin","e","properties","property","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","val","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":"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"}